using System;
using System.IO;
using System.Text;

namespace Regras.FrontEndClasses
{
    public static class LayoutsCreator
    {
        public static bool Create(string projectPath)
        {
            bool success = true;

            try
            {
                string layoutAdmin = NamesHandler.GetDirectoryByType(projectPath, NamesHandler.FileType.LayoutsAdmin);
                CreateAdminLayout(layoutAdmin);

                string layoutClient = NamesHandler.GetDirectoryByType(projectPath, NamesHandler.FileType.LayoutsClient);
                CreateClientLayout(layoutClient);
            }
            catch (Exception ex)
            {
                Util.CL_Files.LogException(ex);
                success = false;
            }

            return success;
        }

        private static void CreateAdminLayout(string path)
        {
            StringBuilder css = new StringBuilder();
            css.AppendLine(".admin-layout {");
            css.AppendLine("    display: flex;");
            css.AppendLine("    min-height: 100vh;");
            css.AppendLine("    width: 100%;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-content {");
            css.AppendLine("    flex: 0 0 270px; /* Fixed width for the sidebar */");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-main {");
            css.AppendLine("    flex: 1;");
            css.AppendLine("    display: flex;");
            css.AppendLine("    flex-direction: column;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-main > * {");
            css.AppendLine("    flex: 1;");
            css.AppendLine("    display: flex;");
            css.AppendLine("    flex-direction: column;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-main > .admin-header {");
            css.AppendLine("    flex-shrink: 0; /* Prevent header from shrinking */");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-main > main {");
            css.AppendLine("    flex-grow: 1; /* Take up the remaining space */");
            css.AppendLine("    padding: 24px;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-top{");
            css.AppendLine("    max-height: 8rem;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".href-history {");
            css.AppendLine("    display: flex;");
            css.AppendLine("    align-items: center;");
            css.AppendLine("    text-align: center;");
            css.AppendLine("    flex-wrap: wrap;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".href-history span{");
            css.AppendLine("    display: flex;");
            css.AppendLine("    align-items: center;");
            css.AppendLine("    font-size: 1.5rem;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".href-history span a {");
            css.AppendLine("    text-decoration: none; ");
            css.AppendLine("    color: black;");
            css.AppendLine("    cursor: pointer;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".link-history{");
            css.AppendLine("    color: var(--button-color-secundary) !important;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-table {");
            css.AppendLine("    width: 100%;");
            css.AppendLine("    border-collapse: collapse;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-table th, .admin-table td {");
            css.AppendLine("    padding: 0.75rem;");
            css.AppendLine("    text-align: center;");
            css.AppendLine("");
            css.AppendLine("    border-bottom: 1px solid #ddd;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-table th {");
            css.AppendLine("    font-weight: bold;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-table .action-icons {");
            css.AppendLine("    display: flex;");
            css.AppendLine("    gap: 0.5rem;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-button {");
            css.AppendLine("    display: block;");
            css.AppendLine("    padding: 0.75rem;");
            css.AppendLine("    margin-top: 1rem;");
            css.AppendLine("    background-color: var(--button-color-primary); ");
            css.AppendLine("    color: var(--text-color-primary);");
            css.AppendLine("    border: none;");
            css.AppendLine("    border-radius: 4px;");
            css.AppendLine("    font-size: 1rem;");
            css.AppendLine("    cursor: pointer;");
            css.AppendLine("    transition: background-color 0.3s ease;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-button:hover {");
            css.AppendLine("    background-color: var(--button-color-primary-hover); ");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".container-admin-page {");
            css.AppendLine("    margin: 1rem;");
            css.AppendLine("    padding: 1rem;");
            css.AppendLine("    color: var(--text-color-secundary);");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".container-admin-page h1{");
            css.AppendLine("    color: var(--title-color);");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".container-admin-page h1, container-admin-page-title h1 {");
            css.AppendLine("    font-size: 2.5rem;");
            css.AppendLine("    font-family: 'Roboto', sans-serif;;");
            css.AppendLine("    margin-bottom: 1rem;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".container-admin-page-title{");
            css.AppendLine("    display: flex;");
            css.AppendLine("    justify-content: space-between;");
            css.AppendLine("    margin-bottom: var(--double-default-spacing);");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".container-admin-page-border{");
            css.AppendLine("    margin: 1.5rem;");
            css.AppendLine("    padding: 1.5rem;");
            css.AppendLine("    border: 1px solid #e0e0e0;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".container-admin-page-filters, .container-admin-page-table{");
            css.AppendLine("    padding: 1.5rem;");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".container-admin-page-table{");
            css.AppendLine("    margin-top: var(--double-default-spacing);");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".sidebar-toggle-btn {");
            css.AppendLine("    display: none;");
            css.AppendLine("    padding: 10px 15px;");
            css.AppendLine("    background-color: var(--primary-color);");
            css.AppendLine("    color: white;");
            css.AppendLine("    border: none;");
            css.AppendLine("    cursor: pointer;");
            css.AppendLine("    font-size: 1rem;");
            css.AppendLine("    z-index: 1000; /* Ensure it appears above other content */");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine(".admin-options-top {");
            css.AppendLine("    display: none; /* Hide by default */");
            css.AppendLine("}");
            css.AppendLine("");
            css.AppendLine("  /* Display toggle button on mobile */");
            css.AppendLine("@media (max-width: 1000px) {");
            css.AppendLine("    .sidebar-toggle-btn {");
            css.AppendLine("      display: block;");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .admin-options-top {");
            css.AppendLine("      display: block; /* Show only on screens 768px wide or smaller */");
            css.AppendLine("      position: absolute;");
            css.AppendLine("      top: 10px; /* Adjust position as needed */");
            css.AppendLine("      left: 10px;");
            css.AppendLine("      z-index: 1000; /* Ensure it appears above other elements */");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .admin-content {");
            css.AppendLine("      display: none; /* Hide sidebar by default on mobile */");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .admin-content.visible {");
            css.AppendLine("      display: block; /* Show sidebar when visible */");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    /* Make main content full width on mobile */");
            css.AppendLine("    .admin-main {");
            css.AppendLine("      margin-left: 0;");
            css.AppendLine("      width: 100%;");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .admin-main > main {");
            css.AppendLine("        flex-grow: 1; /* Take up the remaining space */");
            css.AppendLine("        padding: 8px;");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .container-admin-page {");
            css.AppendLine("        margin: 0.5rem;");
            css.AppendLine("        padding: 0.5rem;");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .admin-table thead {");
            css.AppendLine("        display: none; /* Hide table headers */");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .admin-table tbody {");
            css.AppendLine("        display: flex;");
            css.AppendLine("        flex-direction: column;");
            css.AppendLine("        gap: var(--double-default-spacing);");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .admin-table tr {");
            css.AppendLine("        display: flex;");
            css.AppendLine("        flex-direction: column;");
            css.AppendLine("        color: var(--text-color-primary);");
            css.AppendLine("        background: var(--color-surface);");
            css.AppendLine("        padding: var(--default-spacing);");
            css.AppendLine("        border-radius: var(--default-border-radius);");
            css.AppendLine("        box-shadow: 0 2px 5px var(--shadow-color-primary);");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .admin-table td {");
            css.AppendLine("        display: flex;");
            css.AppendLine("        flex-wrap: wrap;");
            css.AppendLine("        justify-content: space-between;");
            css.AppendLine("        padding: 8px 0;");
            css.AppendLine("    }");
            css.AppendLine("");
            css.AppendLine("    .admin-table td::before {");
            css.AppendLine("        content: attr(data-label); /* Show column name as a label */");
            css.AppendLine("        font-weight: bold;");
            css.AppendLine("        color: var(--text-color-primary);");
            css.AppendLine("    }");
            css.AppendLine("}");

            StringBuilder js = new StringBuilder();
            js.AppendLine("import React, { useState } from \"react\";");
            js.AppendLine("import \"./AdminLayout.css\";");
            js.AppendLine("import AdminSidebar from \"../../components/admin/AdminSidebar/AdminSidebar\";");
            js.AppendLine("import HomeIcon from \"../../components/icons/HomeIcon\";");
            js.AppendLine("import ArrowIcon from \"../../components/icons/ArrowIcon\";");
            js.AppendLine("import { useLocation, Link } from \"react-router-dom\";");
            js.AppendLine("import AdminHeader from \"../../components/admin/AdminHeader/AdminHeader\";");
            js.AppendLine("");
            js.AppendLine("const AdminLayout = ({ children }) => {");
            js.AppendLine("  const location = useLocation();");
            js.AppendLine("  const pathSegments = location.pathname.split(\"/\").filter(Boolean);");
            js.AppendLine("  const [isSidebarOpen, setIsSidebarOpen] = useState(false); // State to control sidebar visibility");
            js.AppendLine("");
            js.AppendLine("  return (");
            js.AppendLine("    <div className=\"admin-layout\">");
            js.AppendLine("      {/* Sidebar - Hidden by default on small screens */}");
            js.AppendLine("      <div className={`admin-content ${isSidebarOpen ? \"visible\" : \"\"}`}>");
            js.AppendLine("        <AdminSidebar />");
            js.AppendLine("      </div>");
            js.AppendLine("");
            js.AppendLine("      {/* Sidebar Overlay (To close the sidebar on click) */}");
            js.AppendLine("      {isSidebarOpen && <div className=\"sidebar-overlay\" onClick={() => setIsSidebarOpen(false)}></div>}");
            js.AppendLine("");
            js.AppendLine("      <div className=\"admin-main\">");
            js.AppendLine("        <div className=\"admin-top\">");
            js.AppendLine("          <AdminHeader onclickMenu={() => setIsSidebarOpen(!isSidebarOpen)}/>");
            js.AppendLine("        </div>");
            js.AppendLine("");
            js.AppendLine("        {/* Breadcrumb Navigation */}");
            js.AppendLine("        <main className=\"admin-children\">");
            js.AppendLine("          <div className=\"href-history small-font\">");
            js.AppendLine("            {pathSegments.length > 0 &&");
            js.AppendLine("              pathSegments.map((segment, index) => {");
            js.AppendLine("                const path = `/${pathSegments.slice(0, index + 1).join(\"/\")}`;");
            js.AppendLine("                const isLast = index === pathSegments.length - 1;");
            js.AppendLine("                return (");
            js.AppendLine("                  <span key={index}>");
            js.AppendLine("                    {index === 0 && (");
            js.AppendLine("                      <>");
            js.AppendLine("                        <Link className=\"padding-top-4-px link-history\" to={\"/\"}>");
            js.AppendLine("                          <HomeIcon />");
            js.AppendLine("                        </Link>");
            js.AppendLine("                        <ArrowIcon />");
            js.AppendLine("                      </>");
            js.AppendLine("                    )}");
            js.AppendLine("                    {!isLast ? (");
            js.AppendLine("                      <>");
            js.AppendLine("                        <Link className=\"text-align-center link-history padding-bottom-4-px\" to={path}>{segment}</Link>");
            js.AppendLine("                        <ArrowIcon />");
            js.AppendLine("                      </>");
            js.AppendLine("                    ) : (");
            js.AppendLine("                      <span className=\"padding-bottom-4-px clickable link\">{segment}</span>");
            js.AppendLine("                    )}");
            js.AppendLine("                  </span>");
            js.AppendLine("                );");
            js.AppendLine("              })}");
            js.AppendLine("          </div>");
            js.AppendLine("          {children}");
            js.AppendLine("        </main>");
            js.AppendLine("      </div>");
            js.AppendLine("    </div>");
            js.AppendLine("  );");
            js.AppendLine("};");
            js.AppendLine("");
            js.AppendLine("export default AdminLayout;");

            File.WriteAllText(path + "//AdminLayout.js", js.ToString());
            File.WriteAllText(path + "//AdminLayout.css", css.ToString());
        }

        private static void CreateClientLayout(string path)
        {
            
        }
    }
}
